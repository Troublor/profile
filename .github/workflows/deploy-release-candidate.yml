# This is a basic workflow to do the last time check before release

# Simple workflow for deploying static content to GitHub Pages
name: Deploy Release Candidate to GitHub Pages

on:
  # Runs on pushes targeting the release branch
  pull_request:
    branches: [release]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: 'gh-pages-rc'
  cancel-in-progress: true

jobs:
  # Single deploy job since we're just deploying
  deploy:
    environment:
      name: Release Candidate
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 16.x
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Install dependencies
        run: yarn

      - name: Build
        run: |
          export PUBLIC_URL=${{ steps.deployment.outputs.page_url }}
          yarn build:pre-release

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: 'build'

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1

  next-release-cycle:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Setup Node.js environment
        uses: actions/setup-node@v2.5.1
        with:
          node-version: 16.x
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Pages
        uses: actions/configure-pages@v2

      - name: Install dependencies
        run: yarn

      - name: Prepare next development cycle
        run: |
          git config --local user.email "github.bot@troublor.xyz"
          git config --local user.name "Troublor Bot"
          yarn version prerelease
          git add package.json
          export next_version=$(jq -r .version package.json)
          git commit -m "chore: prepare next development cycle v$next_version"
          echo "next_version=$next_version" >> $GITHUB_ENV

      - name: Push commits to a temp branch
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.BOT_TOKEN }}
          branch: next-dev-cycle-${{ env.next_version }}

      - name: Create Pull Request to main branch
        uses: repo-sync/pull-request@v2
        with:
          github_token: ${{ secrets.BOT_TOKEN }}
          source_branch: next-dev-cycle-${{ env.next_version }}
          destination_branch: main
          pr_title: 'Start v${{ env.next_version }} development cycle'
